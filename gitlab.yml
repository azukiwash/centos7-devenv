---
- hosts: vagrant
  user: vagrant
  vars:
    user: vagrant
    home_dir: /home/{{ user }}
    gitlab_hostname: localhost.localdomain
    gitlab_ip: 10.0.2.15
    gitlab_rb: /srv/gitlab/config/gitlab.rb

  tasks:
  - name: ensure docker is at the present version
    sudo: yes
    yum: name=docker state=present

  - name: enabled docker service
    sudo: yes
    service:
      name: docker
      enabled: yes

  - name: start docker service
    sudo: yes
    service:
      name: docker
      state: started

  - name: create data directory for gitlab
    sudo: yes
    file:
      path: /srv
      state: directory

  - name: allow docker to change files in the directory
    sudo: yes
    shell: "chcon -Rt svirt_sandbox_file_t /srv"
    changed_when: false

  - name: stop and remove exist docker containers
    sudo: yes
    shell: |
      containers=`docker ps -a -q`
      [ -z "$containers" ] || (docker stop $containers && docker rm $containers)
    changed_when: false

  - name: pull latest gitlab-ce image from repo
    sudo: yes
    shell: "docker pull gitlab/gitlab-ce:latest"
    changed_when: false

  - name: start gitlab container
    sudo: yes
    shell: |
      docker run --detach \
        --hostname {{ gitlab_hostname }} \
        --publish {{ gitlab_ip }}:443:443 \
        --publish {{ gitlab_ip }}:80:80 \
        --publish {{ gitlab_ip }}:12222:22 \
        --name gitlab \
        --restart always \
        --volume /srv/gitlab/config:/etc/gitlab \
        --volume /srv/gitlab/logs:/var/log/gitlab \
        --volume /srv/gitlab/data:/var/opt/gitlab \
        gitlab/gitlab-ce:latest
    changed_when: false

  - name: create selfsigned certificate
    sudo: yes
    shell: |
      mkdir -p /srv/gitlab/config/ssl/; cd /srv/gitlab/config/ssl/
      [ -e {{ gitlab_hostname }}.key ] && rm {{ gitlab_hostname }}.key
      [ -e {{ gitlab_hostname }}.crt ] && rm {{ gitlab_hostname }}.crt
      openssl ecparam -out {{ gitlab_hostname }}.key -name secp384r1 -genkey
      openssl req -new \
                  -x509 \
                  -key {{ gitlab_hostname }}.key \
                  -sha384 \
                  -days 3650 \
                  -subj "/CN={{ gitlab_hostname }}" \
                  -out {{ gitlab_hostname }}.crt
    changed_when: false

  - name: check gitlab config if already modified
    sudo: yes
    shell: |
      sleep 60
      [ -e {{ gitlab_rb }} ] && [ "`tail -1 {{ gitlab_rb }}`" = "### end of config ###" ]
    register: chk_config
    changed_when: false
    failed_when: chk_config.rc not in [0, 1]

#  - debug: var=chk_config.rc

  - name: update gitlab config
    when: chk_config.rc == 1
    sudo: yes
    shell: |
      sed -i "$a\external_url 'https://azuki.cc'"                               {{ gitlab_rb }}
      sed -i "$a\nginx['redirect_http_to_https'] = true"                        {{ gitlab_rb }}
      sed -i "$a\nginx['ssl_certificate'] = '/etc/gitlab/ssl/azuki.cc.crt'"     {{ gitlab_rb }}
      sed -i "$a\nginx['ssl_certificate_key'] = '/etc/gitlab/ssl/azuki.cc.key'" {{ gitlab_rb }}
      sed -i "$a\nginx['ssl_ciphers'] = 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256'" {{ gitlab_rb }}
      sed -i "$a\nginx['ssl_prefer_server_ciphers'] = 'on'"                     {{ gitlab_rb }}
      sed -i "$a\nginx['ssl_protocols'] = 'TLSv1.2'"                            {{ gitlab_rb }}
      sed -i "$a\### end of config ###"                                         {{ gitlab_rb }}
    changed_when: false

  - name: restart gitlab
    sudo: chk_config.rc == 1
    sudo: yes
    shell: "docker restart gitlab"
    changed_when: false
